{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeTransaction.js","components/IncomeList.js","components/ExpenseTransaction.js","components/ExpenseList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","AppReducer","state","action","type","incomeTransactions","payload","expenseTransactions","filter","incomeTransaction","id","expenseTransaction","initialState","JSON","parse","localStorage","getItem","GlobalContext","createContext","GlobalContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addIncome","addExpense","Balance","useContext","incomeAmounts","map","incomeAmount","expenseAmounts","expenseAmount","totalIncome","reduce","acc","item","toFixed","totalExpenses","IncomeTransaction","incomeText","onClick","IncomeList","ExpenseTransaction","expenseText","ExpenseList","AddTransaction","useState","income","setIncome","onChangeIncome","e","target","name","expense","setExpense","onChangeExpense","onSubmit","preventDefault","newIncomeTransaction","uuidv4","placeholder","autoComplete","onChange","newExpenseTransaction","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cc4e162.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Budget App</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","const AppReducer= (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_INCOME\":\r\n      return {\r\n        ...state,\r\n        incomeTransactions: [action.payload, ...state.incomeTransactions]\r\n      };\r\n    case \"ADD_EXPENSE\":\r\n      return {\r\n        ...state,\r\n        expenseTransactions: [action.payload, ...state.expenseTransactions]\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        incomeTransactions: state.incomeTransactions.filter(\r\n          incomeTransaction => incomeTransaction.id !== action.payload\r\n        ),\r\n        expenseTransactions: state.expenseTransactions.filter(\r\n          expenseTransaction => expenseTransaction.id !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default AppReducer;","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  incomeTransactions:\r\n    JSON.parse(localStorage.getItem(\"incomeTransactions\")) || [],\r\n  expenseTransactions:\r\n    JSON.parse(localStorage.getItem(\"expenseTransactions\")) || []\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"incomeTransactions\",\r\n      JSON.stringify(state.incomeTransactions)\r\n    );\r\n    localStorage.setItem(\r\n      \"expenseTransactions\",\r\n      JSON.stringify(state.expenseTransactions)\r\n    );\r\n  });\r\n\r\n  const deleteTransaction = id => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  const addIncome = incomeTransaction => {\r\n    dispatch({\r\n      type: \"ADD_INCOME\",\r\n      payload: incomeTransaction\r\n    });\r\n  };\r\n\r\n  const addExpense = expenseTransaction => {\r\n    dispatch({\r\n      type: \"ADD_EXPENSE\",\r\n      payload: expenseTransaction\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        incomeTransactions: state.incomeTransactions,\r\n        expenseTransactions: state.expenseTransactions,\r\n        deleteTransaction,\r\n        addIncome,\r\n        addExpense\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { incomeTransactions, expenseTransactions } = useContext(GlobalContext);\r\n\r\n  const incomeAmounts = incomeTransactions.map(\r\n    incomeTransaction => incomeTransaction.incomeAmount\r\n  );\r\n\r\n  const expenseAmounts = expenseTransactions.map(\r\n    expenseTransaction => expenseTransaction.expenseAmount\r\n  );\r\n\r\n  const totalIncome = incomeAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const totalExpenses = expenseAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"balance\">\r\n      <h2>Your Balance</h2>\r\n      <h3>${(totalIncome - totalExpenses).toFixed(2)}</h3>\r\n      <div className=\"income-expense\">\r\n        <div className=\"plus\">\r\n          <h3>Income</h3>\r\n          <p>+${totalIncome}</p>\r\n        </div>\r\n        <div className=\"minus\">\r\n          <h3>Expenses</h3>\r\n          <p>-${totalExpenses}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeTransaction = ({ incomeTransaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <li className=\"transaction\">\r\n      <span className=\"transaction-text\">{incomeTransaction.incomeText}</span>\r\n      <span className=\"transaction-amount\">\r\n        ${incomeTransaction.incomeAmount}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(incomeTransaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default IncomeTransaction;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport IncomeTransaction from \"./IncomeTransaction\";\r\n\r\nconst IncomeList = () => {\r\n  const { incomeTransactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"transactions transactions-income\">\r\n      <h2>Transaction History</h2>\r\n      <ul className=\"transaction-list\">\r\n        {incomeTransactions.map(incomeTransaction => (\r\n          <IncomeTransaction\r\n            key={incomeTransaction.id}\r\n            incomeTransaction={incomeTransaction}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeList;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst ExpenseTransaction = ({ expenseTransaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <li className=\"transaction\">\r\n      <span className=\"transaction-text\">{expenseTransaction.expenseText}</span>\r\n      <span className=\"transaction-amount\">\r\n        ${expenseTransaction.expenseAmount}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(expenseTransaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseTransaction;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport ExpenseTransaction from \"./ExpenseTransaction\";\r\n\r\nconst ExpenseList = () => {\r\n  const { expenseTransactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"transactions transactions-expense\">\r\n      <h2>Transaction History</h2>\r\n      <ul className=\"transaction-list\">\r\n        {expenseTransactions.map(expenseTransaction => (\r\n          <ExpenseTransaction\r\n            key={expenseTransaction.id}\r\n            expenseTransaction={expenseTransaction}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;","import React, { useState, useContext } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const { addIncome, addExpense } = useContext(GlobalContext);\r\n\r\n  const [income, setIncome] = useState({\r\n    incomeText: \"\",\r\n    incomeAmount: 0,\r\n  });\r\n\r\n  const { incomeText, incomeAmount } = income;\r\n\r\n  const onChangeIncome = (e) => {\r\n    setIncome({ ...income, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitIncome = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (incomeText !== \"\") {\r\n      const newIncomeTransaction = {\r\n        id: uuidv4(),\r\n        incomeText,\r\n        incomeAmount: incomeAmount * 1,\r\n      };\r\n\r\n      addIncome(newIncomeTransaction);\r\n\r\n      setIncome({\r\n        incomeText: \"\",\r\n        incomeAmount: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [expense, setExpense] = useState({\r\n    expenseText: \"\",\r\n    expenseAmount: 0,\r\n  });\r\n\r\n  const { expenseText, expenseAmount } = expense;\r\n\r\n  const onChangeExpense = (e) => {\r\n    setExpense({ ...expense, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitExpense = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (expenseText !== \"\") {\r\n      const newExpenseTransaction = {\r\n        id: uuidv4(),\r\n        expenseText,\r\n        expenseAmount: expenseAmount * 1,\r\n      };\r\n\r\n      addExpense(newExpenseTransaction);\r\n\r\n      setExpense({\r\n        expenseText: \"\",\r\n        expenseAmount: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <form onSubmit={onSubmitIncome}>\r\n        <div className=\"input-group income\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"incomeText\"\r\n            value={incomeText}\r\n            placeholder=\"Add Income...\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeIncome}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"incomeAmount\"\r\n            value={incomeAmount}\r\n            placeholder=\"Amount\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeIncome}\r\n          />\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </div>\r\n      </form>\r\n      <form onSubmit={onSubmitExpense}>\r\n        <div className=\"input-group expense\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"expenseText\"\r\n            value={expenseText}\r\n            placeholder=\"Add Expense...\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeExpense}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"expenseAmount\"\r\n            value={expenseAmount}\r\n            placeholder=\"Amount\"\r\n            autoComplete=\"off\"\r\n            onChange={onChangeExpense}\r\n          />\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeList from \"./components/IncomeList\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport { GlobalContextProvider } from \"./context/GlobalState\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <GlobalContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <Balance />\n          <IncomeList />\n          <ExpenseList />\n          <AddTransaction />\n        </div>\n      </div>\n    </GlobalContextProvider>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}